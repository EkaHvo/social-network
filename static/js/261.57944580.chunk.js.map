{"version":3,"file":"static/js/261.57944580.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Profile/ProfileInfo/AddPhoto/AddPhoto.module.css?ffc9","components/Profile/ProfileInfo/AddPhoto/AddPhoto.jsx","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.module.css?9ff0","components/Profile/ProfileInfo/ProfileDataForm/ProfileDataForm.jsx","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileData/ProfileData.module.css?ce4d","components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","components/Profile/ProfileStatus/ProfileStatus.jsx","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/Profile/Posts/Post/Post.module.css?59e2","components/Profile/Posts/Post/Post.jsx","webpack://social-network/./src/components/Profile/Posts/Posts.module.css?138f","components/Profile/Posts/Posts.jsx","webpack://social-network/./src/components/Profile/Posts/AddPost.tsx/AddPost.module.css?3b37","components/Profile/Posts/AddPost.tsx/AddPost.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://social-network/./src/components/common/FormControls/FormControls.module.css?7a3d","components/common/FormControls/FormControls.jsx","utils/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"inputWrapper\":\"AddPhoto_inputWrapper__uksxI\",\"inputLabel\":\"AddPhoto_inputLabel__Sg3P0\",\"inputFile\":\"AddPhoto_inputFile__ibZT2\"};","import cls from './AddPhoto.module.css';\n\nexport const AddPhotoInput = ({ onAddPhoto }) => {\n  const onOwnerAvatarChange = (e) =>  {\n    if(e.currentTarget.files.length){\n      onAddPhoto(e.currentTarget.files[0])\n    }\n  }\n\n  return (\n    <label className={cls.inputWrapper}>\n      <input className={cls.inputFile} type='file' onChange={onOwnerAvatarChange}/>\t\t\n      <span className={cls.inputLabel}>&#9998;</span>\n    </label>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"ProfileDataForm_contact__XZhoC\"};","import { reduxForm } from 'redux-form';\nimport Button from '../../../Button/Button';\nimport { createField } from '../../../common/FormControls/FormControls';\nimport cls from './ProfileDataForm.module.css';\n\nconst ProfileDataForm = ({handleSubmit, contacts}) => {\n  return (\n    <form onSubmit={handleSubmit} >\n      Full name: { createField('fullName', 'input', 'text' )}\n      About me: { createField('aboutMe', 'input', 'text' )}\n      Looking for a job: { createField('lookingForAJob', 'input', 'checkbox' )}\n      Looking for a job Description: { createField('lookingForAJobDescription', 'textarea' )}\n      {\n        Object.keys(contacts).map(key => <ProfileField name={key}/>)\n      }\n      <Button>Edit profile</Button>\n    </form>\n  )\n}\n\nconst ProfileField = ({name}) => {\n  return (\n    <div className={cls.contact} key={name}>\n      <span>{name}:</span> \n      {createField(`contacts.${name}`, 'input', 'text' )}\n    </div>\n  )\n}\n\nexport const ProfileReduxDataForm = reduxForm({\n  form: 'editProfile'\n})(ProfileDataForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"profileExtraInfo\":\"ProfileData_profileExtraInfo__cpj0E\",\"contacts\":\"ProfileData_contacts__5-XYG\",\"contact\":\"ProfileData_contact__txSV0\"};","import Button from '../../../Button/Button';\nimport cls from './ProfileData.module.css';\n\nconst Contact = ({contactTitle, contactValue}) => { \n  return <div className={cls.contact}><b>{contactTitle}:</b> {contactValue}</div>\n}\n\nexport const ProfileData = ({profile, isOwner, toEditMode}) => { \n  const { aboutMe, lookingForAJob, lookingForAJobDescription, contacts, fullName } = profile;\n\n  return (\n    <div className={cls.profileExtraInfo}>\n      { fullName && <div><b>{fullName}</b></div>}\n      { aboutMe && <div><b>{aboutMe}</b></div>}\n      <div><b>Looking for a job: </b>{lookingForAJob ? 'yes': 'no'}</div>\n      { lookingForAJob && lookingForAJobDescription && <div>{lookingForAJobDescription}</div> }\n      <div className={cls.contacts}> <b>My contacts:</b>\n        {\n          Object.keys(contacts).map(key => (\n            contacts[key] && Contact({contactTitle: key, contactValue: contacts[key]})\n          ))\n        }\n      </div>\n      {isOwner && <Button onClick={toEditMode}>Edit profile</Button>}\n    </div>\n  )\n}\n\n","import { useEffect, useState } from \"react\";\n\nconst ProfileStatus = (props) => {\n  const {status, isOwner, onStatusChange} = props;\n\n  const [ isEditMode, setEditMode] = useState(false);\n  const [ localStatus, setLocalStatus] = useState('');\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    if(status !== localStatus) {\n      onStatusChange(localStatus);\n    }\n  }\n\n  const updateStatusHandle = (event) => {\n    setLocalStatus(event.target.value);\n  }\n\n  useEffect(()=>{\n    if(status) {\n      setLocalStatus(status)\n    }\n  }, [status])\n\n  if(!isOwner){ return <div>{status}</div> }\n\n  return (\n    <>\n      { \n        isEditMode || !status\n        ? <input autoFocus \n          onBlur={deactivateEditMode} \n          onChange={updateStatusHandle} \n          value={localStatus}/>\n        : <div onClick={activateEditMode}>{localStatus}</div> \n      }\n    </>\n  );\n}\n\nexport default ProfileStatus;\n","// extracted by mini-css-extract-plugin\nexport default {\"profileHeader\":\"ProfileInfo_profileHeader__DVK81\",\"profileDescr\":\"ProfileInfo_profileDescr__d88zk\",\"profileCover\":\"ProfileInfo_profileCover__RfJF0\",\"profileCoverAvatar\":\"ProfileInfo_profileCoverAvatar__DPg3N\",\"profileExtraInfo\":\"ProfileInfo_profileExtraInfo__-KoVZ\"};","import { useState } from 'react';\nimport { AddPhotoInput } from './AddPhoto/AddPhoto';\nimport { ProfileReduxDataForm as ProfileDataForm} from './ProfileDataForm/ProfileDataForm';\nimport { ProfileData } from './ProfileData/ProfileData';\nimport Avatar from '../../Avatar/Avatar';\nimport ProfileStatus from '../ProfileStatus/ProfileStatus';\nimport cls from './ProfileInfo.module.css';\n\nconst ProfileInfo = (props) => {\n  const { status, onStatusChange, isOwner, onAddPhoto, profile, onEditProfile } = props;\n  const { photos } = profile;\n\n  const [editMode, setEditMode] = useState(false);\n  const toEditMode = () => {\n    setEditMode(true);\n  }\n  const fromEditMode = (data) => {\n    onEditProfile(data);\n    setEditMode(false);\n  }\n\n  return (\n    <>\n      <div className={cls.profileHeader}>\n        <div className={cls.profileCover}></div>\n        <div className={cls.profileDescr}>\n          <div className={cls.profileCoverAvatar}>\n            <Avatar src={photos.small} />\n          </div>\n          {isOwner ? <AddPhotoInput onAddPhoto={onAddPhoto} /> : null}\n          <div className={cls.profileMainInfo}>\n            <ProfileStatus\n              status={status}\n              isOwner={isOwner}\n              onStatusChange={onStatusChange} />\n          </div>\n        </div>\n      </div>\n      { editMode \n        ? <ProfileDataForm initialValues={profile} contacts={profile.contacts} onSubmit={fromEditMode}/> \n        : <ProfileData profile={profile} isOwner={isOwner} toEditMode={toEditMode}/>}\n    </>\n  );\n}\n\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__B0GW4\"};","import cls from './Post.module.css';\nimport Avatar from '../../../Avatar/Avatar';\nimport Button from '../../../Button/Button';\n\nconst Post = (props) => {\n  const {id, message, likesCount, onDeletePost} = props;\n  const handleDelete = () => {\n    onDeletePost(id)\n  };\n  \n  return (\n    <div className={cls.post}>\n      <Avatar src='https://i.pinimg.com/originals/1b/8c/4a/1b8c4a21c217008ca89478652c7dc9f6.jpg'/>\n      {message}\n      <div>\n        {likesCount} likes\n      </div>\n      <Button onClick={handleDelete}>Delete</Button>\n    </div>\n  );\n}\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__TlcY-\"};","import Post from './Post/Post';\nimport cls from './Posts.module.css';\nimport { memo } from 'react';\n\nconst Posts = memo((props) => {\n  const { posts, onDeletePost } = props;\n\n  return (\n    <div className={cls.posts}>\n      {posts.map(post => <Post key={post.id} id={post.id} message={post.message} likesCount={post.likesCount} onDeletePost={onDeletePost} />)}\n    </div>\n  );\n});\n\nexport default Posts;\n","// extracted by mini-css-extract-plugin\nexport default {\"addPostWrapper\":\"AddPost_addPostWrapper__Z+es3\"};","import Button from '../../../Button/Button';\nimport cls from './AddPost.module.css';\nimport { reduxForm } from 'redux-form';\nimport { maxLengthCreator, required, alphaNumeric } from '../../../../utils/validators';\nimport { createField } from \"../../../common/FormControls/FormControls\";\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst AddPostForm = ({handleSubmit}) => {\n  return (\n    <form onSubmit={handleSubmit} className={cls.addPostWrapper}>\n      {createField('newPostText', 'textarea', 'text', [required, maxLength30], alphaNumeric, 'New post')}\n      <Button>Send</Button>\n    </form>\n  )\n}\n\nexport const AddPostReduxForm = reduxForm({\n  form: 'addPost'\n})(AddPostForm);\n","import ProfileInfo from './ProfileInfo/ProfileInfo';\nimport Posts from './Posts/Posts';\nimport Loader from '../common/Loader/Loader';\nimport {AddPostReduxForm as AddPost} from './Posts/AddPost.tsx/AddPost';\n\nconst Profile = (props) => {\n  const { profile, status, posts, onAddPost, onDeletePost, isOwner, onStatusChange, onAddPhoto, onEditProfile } = props;\n\n  if(!profile) {\n    return <Loader/>\n  } else {\n    return (\n      <>\n        <ProfileInfo \n          status={status}\n          isOwner={isOwner}\n          onAddPhoto={onAddPhoto}\n          onStatusChange={onStatusChange}\n          onEditProfile={onEditProfile}\n          profile={profile}/>\n        { isOwner ? <AddPost onSubmit={onAddPost}/> : null }\n        <Posts posts={posts} onDeletePost={onDeletePost}/>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { reset } from 'redux-form';\r\nimport { savePhoto, setProfile, setStatus, updateProfile, updateStatus } from '../../store/profile/action';\r\nimport { addPost, deletePost } from '../../store/profile/slice';\r\nimport Loader from '../common/Loader/Loader';\r\nimport Profile from './Profile';\r\n\r\nconst ProfileContainer = () => {\r\n  const { profile, posts, status, isProfileLoading } = useSelector(state => state.profile);\r\n  const { user } = useSelector(state => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n  const userId = useParams().userId || user.id;\r\n\r\n  const onAddPost = (values) => {\r\n    dispatch(addPost(values));\r\n    dispatch(reset('addPost'));\r\n  }\r\n\r\n  const onAddPhoto = (file) => {\r\n    dispatch(savePhoto(file));\r\n  }\r\n\r\n  const onEditProfile = (data) => {\r\n    dispatch(updateProfile(data));\r\n  }\r\n\r\n  const onDeletePost = (id) => {\r\n    dispatch(deletePost({id}));\r\n  }\r\n\r\n  const onStatusChange = (status) => {\r\n    dispatch(updateStatus(status));\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(setProfile(userId));\r\n    dispatch(setStatus(userId));\r\n  }, [dispatch, userId])\r\n\r\n\r\n  return (\r\n    <>\r\n      { isProfileLoading \r\n          ? <Loader />\r\n          : <Profile\r\n              profile={profile}\r\n              status={status}\r\n              isOwner={userId === user.id}\r\n              onStatusChange={onStatusChange}\r\n              onEditProfile={onEditProfile}\r\n              onAddPhoto={onAddPhoto}\r\n              onAddPost={onAddPost}\r\n              onDeletePost={onDeletePost}\r\n              posts={posts} />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileContainer;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"FormControls_input__N5HU6\",\"textarea\":\"FormControls_textarea__7E6E2\",\"warning\":\"FormControls_warning__mOtLP\",\"error\":\"FormControls_error__mrDja\"};","import classnames from 'classnames';\nimport { Field } from 'redux-form';\nimport cls from './FormControls.module.css';\n\nexport const Input = ({ input, meta, typeComponent, ...restProps }) => { \n  const { touched, error, warning } = meta;\n\n  const hasError = touched && error;\n  const hasWarn = touched && warning;\n\n  const classNames = classnames(cls[typeComponent], hasError && cls.error, hasWarn && cls.warning);\n\n  return (\n    <>\n      {\n        ( typeComponent === 'textarea' && <textarea {...input} {...restProps} className={classNames}/> ) ||\n        ( typeComponent === 'input' && <input {...input} {...restProps} className={classNames}/> ) \n      }\n      { hasError && <span className={cls.error}>{error}</span> }\n      { hasWarn && <span className={cls.warning}>{warning}</span> }\n    </>\n  );\n}\n\nexport const createField = (name, typeComponent, type, validate, warn, placeholder, text, props) => {\n  return (\n    <div>\n      <Field \n        name={name}\n        typeComponent={typeComponent}\n        component={Input} \n        type={type} \n        validate={validate}\n        warn={warn}\n        placeholder={placeholder} \n        {...props}/>\n      { text ? (<span>{text}</span>) : '' }\n    </div>\n  )\n}\n","export const required = value => (value ? undefined : 'Field is required');\r\n\r\nexport const alphaNumeric = value =>(value && /[^a-zA-Z0-9 ]/i.test(value) ? 'Only alphanumeric characters' : undefined);\r\n\r\nexport const maxLengthCreator = max => value => (value && value.length > max ? `Must be ${max} characters or less` : undefined);\r\n"],"names":["AddPhotoInput","onAddPhoto","className","cls","type","onChange","e","currentTarget","files","length","ProfileField","name","createField","ProfileReduxDataForm","reduxForm","form","handleSubmit","contacts","onSubmit","Object","keys","map","key","Button","ProfileData","profile","isOwner","toEditMode","aboutMe","lookingForAJob","lookingForAJobDescription","fullName","contactTitle","contactValue","Contact","onClick","props","status","onStatusChange","useState","isEditMode","setEditMode","localStatus","setLocalStatus","useEffect","autoFocus","onBlur","event","target","value","onEditProfile","photos","editMode","Avatar","src","small","initialValues","data","id","message","likesCount","onDeletePost","memo","posts","post","maxLength30","maxLengthCreator","AddPostReduxForm","required","alphaNumeric","onAddPost","Loader","useSelector","state","isProfileLoading","user","auth","dispatch","useDispatch","userId","useParams","setProfile","setStatus","updateStatus","updateProfile","file","savePhoto","values","addPost","reset","deletePost","Input","input","meta","typeComponent","restProps","touched","error","warning","hasError","hasWarn","classNames","classnames","validate","warn","placeholder","text","Field","component","undefined","test","max"],"sourceRoot":""}