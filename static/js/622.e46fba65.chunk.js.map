{"version":3,"file":"static/js/622.e46fba65.chunk.js","mappings":"0LACA,EAA0B,uB,2DCA1B,EAAuB,wBAAvB,EAAuD,yB,SCkB1CA,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAbZ,SAAH,GAAiC,IAA3BE,EAAY,EAAZA,aAAcC,EAAK,EAALA,MACjC,OACI,kBAAMC,SAAUF,EAAcG,UAAWC,EAAS,WAC/CC,EAAAA,EAAAA,GAAY,QAAS,QAAS,OAAQ,CAACC,EAAAA,IAAW,KAAM,UACxDD,EAAAA,EAAAA,GAAY,WAAY,QAAS,OAAQ,CAACC,EAAAA,IAAW,KAAM,aAC3DD,EAAAA,EAAAA,GAAY,aAAc,QAAS,WAAY,KAAM,KAAM,KAAM,eAChEJ,IAAS,gBAAKE,UAAWC,EAAU,SAAEH,KAEvC,SAACM,EAAA,EAAM,UAAC,YAGhB,ICeA,EAzBc,WACZ,IAAQC,GAAUC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,IAAI,IAAzCH,OAEFI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAajB,OANAC,EAAAA,EAAAA,YAAU,WACLR,GACDM,EAAS,WAEb,GAAG,CAACA,EAAUN,KAGZ,iBAAKL,UAAWC,EAAY,WAC1B,wBAAI,WACJ,SAAC,EAAS,CAACF,SAdC,SAACe,GACf,IAAKC,EAAuCD,EAAvCC,MAAOC,EAAgCF,EAAhCE,SAAS,EAAuBF,EAAtBG,WAAAA,OAAU,OAAQ,EACxCR,GAASS,EAAAA,EAAAA,IAAM,CAACH,MAAAA,EAAOC,SAAAA,EAAUC,WAAAA,IACnC,MAcF,C,mIC7BA,GAAgB,MAAQ,4BAA4B,SAAW,+BAA+B,QAAU,8BAA8B,MAAQ,6B,4CCGjIE,EAAQ,SAAH,GAAsD,IAAhDC,EAAK,EAALA,MAAOC,EAAI,EAAJA,KAAMC,EAAa,EAAbA,cAAkBC,GAAS,YACtDC,EAA4BH,EAA5BG,QAAS1B,EAAmBuB,EAAnBvB,MAAO2B,EAAYJ,EAAZI,QAElBC,EAAWF,GAAW1B,EACtB6B,EAAUH,GAAWC,EAErBG,EAAaC,IAAW5B,EAAIqB,GAAgBI,GAAYzB,EAAAA,MAAW0B,GAAW1B,EAAAA,SAEpF,OACE,gCAEwB,aAAlBqB,IAAgC,+CAAcF,GAAWG,GAAS,IAAEvB,UAAW4B,MAC7D,UAAlBN,IAA6B,4CAAWF,GAAWG,GAAS,IAAEvB,UAAW4B,KAE3EF,IAAY,iBAAM1B,UAAWC,EAAAA,MAAU,SAAEH,IACzC6B,IAAW,iBAAM3B,UAAWC,EAAAA,QAAY,SAAEwB,MAGlD,EAEavB,EAAc,SAAC4B,EAAMR,EAAeS,EAAMC,EAAUC,EAAMC,EAAaC,EAAMC,GACxF,OACE,4BACE,SAACC,EAAA,GAAK,QACJP,KAAMA,EACNR,cAAeA,EACfgB,UAAWnB,EACXY,KAAMA,EACNC,SAAUA,EACVC,KAAMA,EACNC,YAAaA,GACTE,IACJD,GAAQ,0BAAOA,IAAgB,KAGvC,C,wGCvCO,IAAMhC,EAAW,SAAAoC,GAAK,OAAKA,OAAQC,EAAY,mBAAmB,EAE5DC,EAAe,SAAAF,GAAK,OAAIA,GAAS,iBAAiBG,KAAKH,GAAS,oCAAiCC,CAAS,EAE1GG,EAAmB,SAAAC,GAAG,OAAI,SAAAL,GAAK,OAAKA,GAASA,EAAMM,OAASD,EAAG,kBAAcA,EAAG,4BAAwBJ,CAAS,CAAE,C","sources":["webpack://social-network/./src/components/Login/Login.module.css?3530","webpack://social-network/./src/components/Login/LoginForm/LoginForm.module.css?1b2c","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","webpack://social-network/./src/components/common/FormControls/FormControls.module.css?7a3d","components/common/FormControls/FormControls.jsx","utils/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__sNtBt\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__e+UY5\",\"error\":\"LoginForm_error__rdH0S\"};","import { reduxForm } from \"redux-form\";\nimport { required } from \"../../../utils/validators\";\nimport Button from \"../../Button/Button\";\nimport { createField } from \"../../common/FormControls/FormControls\";\nimport cls from './LoginForm.module.css';\n\nconst LoginForm = ({ handleSubmit, error }) => {\n  return (\n      <form onSubmit={handleSubmit} className={cls.form}>\n        {createField('email', 'input', 'text', [required], null, 'Email')}\n        {createField('password', 'input', 'text', [required], null, 'Password')}\n        {createField('rememberMe', 'input', 'checkbox', null, null, null, 'remember me')}\n        { error && <div className={cls.error}>{error}</div> }\n\n        <Button>Login</Button>\n      </form>\n  );\n}\n\nexport const LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport cls from './Login.module.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { login } from \"../../store/auth/action\";\nimport { LoginReduxForm as LoginForm } from \"./LoginForm/LoginForm\";\n\nconst Login = () => {\n  const { isAuth }= useSelector(state => state.auth);\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onLogin = (formData) => {\n    let {email, password, rememberMe = false} = formData\n    dispatch(login({email, password, rememberMe}));\n  }\n\n  useEffect(()=>{\n    if(isAuth){\n      navigate(`/profile`);\n    }\n  }, [navigate, isAuth])\n\n  return (\n    <div className={cls.wrapper}>\n      <h1>Login</h1>\n      <LoginForm onSubmit={onLogin}/>\n    </div>\n  );\n}\n\nexport default Login;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"FormControls_input__N5HU6\",\"textarea\":\"FormControls_textarea__7E6E2\",\"warning\":\"FormControls_warning__mOtLP\",\"error\":\"FormControls_error__mrDja\"};","import classnames from 'classnames';\nimport { Field } from 'redux-form';\nimport cls from './FormControls.module.css';\n\nexport const Input = ({ input, meta, typeComponent, ...restProps }) => { \n  const { touched, error, warning } = meta;\n\n  const hasError = touched && error;\n  const hasWarn = touched && warning;\n\n  const classNames = classnames(cls[typeComponent], hasError && cls.error, hasWarn && cls.warning);\n\n  return (\n    <>\n      {\n        ( typeComponent === 'textarea' && <textarea {...input} {...restProps} className={classNames}/> ) ||\n        ( typeComponent === 'input' && <input {...input} {...restProps} className={classNames}/> )\n      }\n      { hasError && <span className={cls.error}>{error}</span> }\n      { hasWarn && <span className={cls.warning}>{warning}</span> }\n    </>\n  );\n}\n\nexport const createField = (name, typeComponent, type, validate, warn, placeholder, text, props) => {\n  return (\n    <div>\n      <Field \n        name={name}\n        typeComponent={typeComponent}\n        component={Input} \n        type={type} \n        validate={validate}\n        warn={warn}\n        placeholder={placeholder} \n        {...props}/>\n      { text ? (<span>{text}</span>) : '' }\n    </div>\n  )\n}\n","export const required = value => (value ? undefined : 'Field is required');\r\n\r\nexport const alphaNumeric = value =>(value && /[^a-zA-Z0-9 ]/i.test(value) ? 'Only alphanumeric characters' : undefined);\r\n\r\nexport const maxLengthCreator = max => value => (value && value.length > max ? `Must be ${max} characters or less` : undefined);\r\n"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","className","cls","createField","required","Button","isAuth","useSelector","state","auth","dispatch","useDispatch","navigate","useNavigate","useEffect","formData","email","password","rememberMe","login","Input","input","meta","typeComponent","restProps","touched","warning","hasError","hasWarn","classNames","classnames","name","type","validate","warn","placeholder","text","props","Field","component","value","undefined","alphaNumeric","test","maxLengthCreator","max","length"],"sourceRoot":""}