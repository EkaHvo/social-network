{"version":3,"file":"static/js/221.4cd7b7a7.chunk.js","mappings":"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","sources":["components/Profile/ProfileStatus/ProfileStatus.jsx","webpack://social-network/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social-network/./src/components/Profile/Posts/Post/Post.module.css?59e2","components/Profile/Posts/Post/Post.jsx","webpack://social-network/./src/components/Profile/Posts/Posts.module.css?138f","components/Profile/Posts/Posts.jsx","webpack://social-network/./src/components/Profile/Posts/AddPost.tsx/AddPost.module.css?3b37","components/Profile/Posts/AddPost.tsx/AddPost.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","webpack://social-network/./src/components/common/FormControls/FormControls.module.css?7a3d","components/common/FormControls/FormControls.jsx","utils/validators.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst ProfileStatus = (props) => {\n  const {status, isOwner, onStatusChange} = props;\n\n  const [ isEditMode, setEditMode] = useState(false);\n  const [ localStatus, setLocalStatus] = useState('');\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  }\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    if(status !== localStatus) {\n      onStatusChange(localStatus);\n    }\n  }\n\n  const updateStatusHandle = (event) => {\n    setLocalStatus(event.target.value);\n  }\n\n  useEffect(()=>{\n    if(status) {\n      setLocalStatus(status)\n    }\n  }, [status])\n\n  if(!isOwner){ return <div>{status}</div> }\n\n  return (\n    <>\n      { \n        isEditMode || !status\n        ? <input autoFocus \n          onBlur={deactivateEditMode} \n          onChange={updateStatusHandle} \n          value={localStatus}/>\n        : <div onClick={activateEditMode}>{localStatus}</div> \n      }\n    </>\n  );\n}\n\nexport default ProfileStatus;\n","// extracted by mini-css-extract-plugin\nexport default {\"profileHeader\":\"ProfileInfo_profileHeader__DVK81\",\"profileDescr\":\"ProfileInfo_profileDescr__d88zk\",\"ownerCover\":\"ProfileInfo_ownerCover__yvNch\",\"ownerCoverAvatar\":\"ProfileInfo_ownerCoverAvatar__SvSOz\",\"ownerInfo\":\"ProfileInfo_ownerInfo__HEJOI\"};","import Avatar from '../../Avatar/Avatar';\nimport ProfileStatus from '../ProfileStatus/ProfileStatus';\nimport cls from './ProfileInfo.module.css';\n\nconst ProfileInfo = (props) => {\n  const { fullName, avatar, status, onStatusChange, isOwner } = props;\n\n  return (\n    <div className={cls.profileHeader}>\n      <div className={cls.ownerCover}></div>\n      <div className={cls.profileDescr}>\n        <div className={cls.ownerCoverAvatar}>\n          <Avatar src={avatar}/>\n        </div>\n        <div className={cls.ownerInfo}>\n          <div>{fullName}</div>\n          <ProfileStatus \n            status={status} \n            isOwner={isOwner} \n            onStatusChange={onStatusChange}/>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default ProfileInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"Post_post__B0GW4\"};","import cls from './Post.module.css';\nimport Avatar from '../../../Avatar/Avatar';\nimport Button from '../../../Button/Button';\n\nconst Post = (props) => {\n  const {id, message, likesCount, onDeletePost} = props;\n  const handleDelete = () => {\n    onDeletePost(id)\n  };\n  \n  return (\n    <div className={cls.post}>\n      <Avatar src='https://i.pinimg.com/originals/1b/8c/4a/1b8c4a21c217008ca89478652c7dc9f6.jpg'/>\n      {message}\n      <div>\n        {likesCount} likes\n      </div>\n      <Button onClick={handleDelete}>Delete</Button>\n    </div>\n  );\n}\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__TlcY-\"};","import Post from './Post/Post';\nimport cls from './Posts.module.css';\nimport { memo } from 'react';\n\nconst Posts = memo((props) => {\n  const { posts, onDeletePost } = props;\n\n  return (\n    <div className={cls.posts}>\n      {posts.map(post => <Post key={post.id} id={post.id} message={post.message} likesCount={post.likesCount} onDeletePost={onDeletePost} />)}\n    </div>\n  );\n});\n\nexport default Posts;\n","// extracted by mini-css-extract-plugin\nexport default {\"addPostWrapper\":\"AddPost_addPostWrapper__Z+es3\"};","import Button from '../../../Button/Button';\nimport cls from './AddPost.module.css';\nimport { reduxForm } from 'redux-form';\nimport { maxLengthCreator, required, alphaNumeric } from '../../../../utils/validators';\nimport { createField } from \"../../../common/FormControls/FormControls\";\n\nconst maxLength30 = maxLengthCreator(30);\n\nconst AddPostForm = ({handleSubmit}) => {\n  return (\n    <form onSubmit={handleSubmit} className={cls.addPostWrapper}>\n      {createField('newPostText', 'textarea', 'text', [required, maxLength30], alphaNumeric, 'New post')}\n      <Button>Send</Button>\n    </form>\n  )\n}\n\nexport const AddPostReduxForm = reduxForm({form: 'addPost'})(AddPostForm);\n","import ProfileInfo from './ProfileInfo/ProfileInfo';\nimport Posts from './Posts/Posts';\nimport Loader from '../common/Loader/Loader';\nimport {AddPostReduxForm as AddPost} from './Posts/AddPost.tsx/AddPost';\n\nconst Profile = (props) => {\n  const { profile, status, posts, onAddPost, onDeletePost, isOwner, onStatusChange } = props;\n\n  if(!profile) {\n    return <Loader/>\n  } else {\n    return (\n      <>\n        <ProfileInfo \n          fullName={profile.fullName}\n          avatar={profile.photos.small}\n          status={status}\n          isOwner={isOwner}\n          onStatusChange={onStatusChange}/>\n        { isOwner ? <AddPost onSubmit={onAddPost}/> : null }\n        <Posts posts={posts} onDeletePost={onDeletePost}/>\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { reset } from 'redux-form';\r\nimport { setProfile, setStatus, updateStatus } from '../../store/profile/action';\r\nimport { addPost, deletePost } from '../../store/profile/slice';\r\nimport Profile from './Profile';\r\n\r\nconst ProfileContainer = () => {\r\n  const { profile, posts, status } = useSelector(state => state.profile);\r\n  const { user } = useSelector(state => state.auth);\r\n\r\n  const dispatch = useDispatch();\r\n  const userId = useParams().userId || user.id;\r\n\r\n  const onAddPost = (values) => {\r\n    dispatch(addPost(values));\r\n    dispatch(reset('addPost'));\r\n  }\r\n\r\n  const onDeletePost = (id) => {\r\n    dispatch(deletePost({id}));\r\n  }\r\n\r\n  const onStatusChange = (status) => {\r\n    dispatch(updateStatus(status));\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(setProfile(userId));\r\n    dispatch(setStatus(userId));\r\n  }, [dispatch, userId])\r\n\r\n  return (\r\n    <Profile\r\n      profile={profile}\r\n      status={status}\r\n      isOwner={userId === user.id}\r\n      onStatusChange={onStatusChange}\r\n      onAddPost={onAddPost}\r\n      onDeletePost={onDeletePost}\r\n      posts={posts} />\r\n  );\r\n}\r\n\r\nexport default ProfileContainer;\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"FormControls_input__N5HU6\",\"textarea\":\"FormControls_textarea__7E6E2\",\"warning\":\"FormControls_warning__mOtLP\",\"error\":\"FormControls_error__mrDja\"};","import classnames from 'classnames';\nimport { Field } from 'redux-form';\nimport cls from './FormControls.module.css';\n\nexport const Input = ({ input, meta, typeComponent, ...restProps }) => { \n  const { touched, error, warning } = meta;\n\n  const hasError = touched && error;\n  const hasWarn = touched && warning;\n\n  const classNames = classnames(cls[typeComponent], hasError && cls.error, hasWarn && cls.warning);\n\n  return (\n    <>\n      {\n        ( typeComponent === 'textarea' && <textarea {...input} {...restProps} className={classNames}/> ) ||\n        ( typeComponent === 'input' && <input {...input} {...restProps} className={classNames}/> )\n      }\n      { hasError && <span className={cls.error}>{error}</span> }\n      { hasWarn && <span className={cls.warning}>{warning}</span> }\n    </>\n  );\n}\n\nexport const createField = (name, typeComponent, type, validate, warn, placeholder, text, props) => {\n  return (\n    <div>\n      <Field \n        name={name}\n        typeComponent={typeComponent}\n        component={Input} \n        type={type} \n        validate={validate}\n        warn={warn}\n        placeholder={placeholder} \n        {...props}/>\n      { text ? (<span>{text}</span>) : '' }\n    </div>\n  )\n}\n","export const required = value => (value ? undefined : 'Field is required');\r\n\r\nexport const alphaNumeric = value =>(value && /[^a-zA-Z0-9 ]/i.test(value) ? 'Only alphanumeric characters' : undefined);\r\n\r\nexport const maxLengthCreator = max => value => (value && value.length > max ? `Must be ${max} characters or less` : undefined);\r\n"],"names":["props","status","isOwner","onStatusChange","useState","isEditMode","setEditMode","localStatus","setLocalStatus","useEffect","autoFocus","onBlur","onChange","event","target","value","onClick","fullName","avatar","className","cls","Avatar","src","id","message","likesCount","onDeletePost","Button","memo","posts","map","post","maxLength30","maxLengthCreator","AddPostReduxForm","reduxForm","form","handleSubmit","onSubmit","createField","required","alphaNumeric","profile","onAddPost","photos","small","Loader","useSelector","state","user","auth","dispatch","useDispatch","userId","useParams","setProfile","setStatus","updateStatus","values","addPost","reset","deletePost","Input","input","meta","typeComponent","restProps","touched","error","warning","hasError","hasWarn","classNames","classnames","name","type","validate","warn","placeholder","text","Field","component","undefined","test","max","length"],"sourceRoot":""}